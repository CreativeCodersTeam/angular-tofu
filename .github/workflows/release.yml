name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v**'

permissions:
  actions: read
  contents: read

jobs:
  BuildAndTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - run: npx playwright install --with-deps
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # When you enable task distribution, run the e2e-ci task instead of e2e
      - run: npx nx affected -t lint test build e2e

      - name: Get version from git tags
        id: get-version
        uses: ./.github/workflows/actions/get-version-from-git

      - name: Publish to npm
        run: |


          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "Last Tag: $LATEST_TAG"

          version=${LATEST_TAG#v}

          #read version from tag
          #TAG=${GITHUB_REF#refs/tags/v}

          BUILD_RUN=${{ github.run_number }}

          IFS='.' read -r -a VERSION_PARTS <<< "$version"

          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}+$BUILD_RUN"

          echo "New version: $NEW_VERSION"

          npx nx release version ${NEW_VERSION}

          #nx run angular-tofu:nx-release-publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # NPM-Token aus GitHub Secrets
